PROJECT NAME
RedeemDust - Polymarket batch-redeem MVP (self-pay gas)

TEMPLATE / MODE
Choose Replit → “Create Repl” → **Web → React** (Vite is already the build tool).
No back-end / Node Repl needed.

WHAT I NEED GENERATED
• A tiny React SPA with Tailwind that walks through:
  1.  “Enter Safe Address”  →  Fetch dust positions  →  Show table
  2.  “Batch Redeem” button (❗️for now wire to console.log('TODO: sign & send'))

DEPENDENCIES  (add to package.json)
"ethers": "^6",
"@gnosis.pm/safe-core-sdk": "^2",
"tailwindcss": "^3",
"@polymarket/sdk-helpers": "latest"      # if not resolvable, stub a helper module
(Post-install Tailwind with `npx tailwindcss init -p` and use CDN fallback if time-boxed.)

REQUIRED FILES / STRUCTURE
src/
 ├─ App.jsx                 # holds top-level state (safeAddress, positions[])
 ├─ components/
 │    ├─ AddressForm.jsx    # text input + “Fetch Dust”
 │    ├─ DustTable.jsx      # table + total USDC dust
 │    └─ RedeemButton.jsx   # builds tx later; stub now
 └─ lib/
      └─ polymarket.js      # helper: fetchPositions(safeAddr, threshold)

STYLING (Tailwind)
• Page bg: `bg-[#f5f6fa]`  text: `text-gray-900`  font: `font-sans`
• Card container with `rounded-xl shadow-md p-6 max-w-xl mx-auto mt-10`
• Buttons: `bg-[#51b27f] hover:opacity-80 text-white font-medium py-2 px-4 rounded-lg`

ENV CONSTANTS  (put in vite.config or import.meta.env)
VITE_RPC_URL
VITE_POSITIONS_ENDPOINT      = https://data-api.polymarket.com/positions
VITE_SIZE_THRESHOLD_DEFAULT  = 0         # usdc

MVP FUNCTIONAL FLOW
1. User types Safe address ➜ click **Fetch Dust**
2. Call `${VITE_POSITIONS_ENDPOINT}?user=<addr>&sizeThreshold=0`
3. Filter positions where   outcomeBalance < 1e-6 && redeemable=true
4. Render DustTable (Market title • Qty • Value) + grand Total
5. **Batch Redeem** ➜ (for now) `console.log('would build tx', positions)`
6. Show dummy toast “Transaction sent! (placeholder)”

OUT-OF-SCOPE / TODO LATER
// TODO: build MultiSend calldata & Safe execTx
// TODO: MetaMask wallet connect & gas balance check
// TODO: relayer vs self-pay switch
// TODO: Next.js migration if needed

DELIVERABLE
Running dev server in Replit + one-click “Run” launches the app.
`npm run build` should output static files ready for GitHub Pages.

